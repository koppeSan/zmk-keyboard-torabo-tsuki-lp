#include "unicode.h"
#include "keycode_japanese.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv {
};

&msc {
};

/ {
    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <26 40 14>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&none  &kp N1     &kp N2    &kp N3    &kp N4               &kp N5                                            &kp N6           &kp N7  &kp N8     &kp N9     &kp N0                &none
&none  &kp Q      &kp W     &kp E     &kp R                &kp T                                             &kp Y            &kp U   &kp I      &kp O      &kp P                 &none
&none  &kp A      &kp S     &kp D     &kp F                &kp G          &kp TAB          &kp DEL           &kp H            &kp J   &kp K      &kp L      &kp MINUS             &none
&none  &kp Z      &kp X     &kp C     &kp V                &kp B          &kp TAB          &kp DEL           &kp N            &kp M   &kp COMMA  &kp DOT    &mt RIGHT_SHIFT FSLH  &none
&none  &kp LCTRL  &kp LGUI  &kp LALT  &lt 3 DOUBLE_QUOTES  &lt 1 JP_ZKHK  &mt LCTRL SPACE  &mt RSHIFT ENTER  &lt 2 BACKSPACE  &none   &none      &kp COLON  &kp ESCAPE            &none
            >;
        };

        Mouse {
            bindings = <
&trans  &trans      &trans        &trans    &trans        &trans                  &trans     &trans          &trans          &trans           &trans  &trans
&trans  &trans      &kp C_BRI_DN  &trans    &kp C_BRI_UP  &trans                  &none      &msc SCRL_LEFT  &msc SCRL_UP    &msc SCRL_RIGHT  &trans  &trans
&trans  &trans      &kp LSHIFT    &kp LALT  &kp LCTRL     &trans  &trans  &trans  &mkp MCLK  &mkp LCLK       &mkp RCLK       &trans           &trans  &trans
&trans  &kp K_MUTE  &kp C_VOL_DN  &trans    &kp C_VOL_UP  &trans  &trans  &trans  &none      &mkp MB4        &msc SCRL_DOWN  &mkp MB5         &trans  &trans
&trans  &trans      &trans        &trans    &trans        &trans  &trans  &trans  &trans     &trans          &trans          &trans           &trans  &trans
            >;

            label = "mouse";
        };

        Num_Sym {
            bindings = <
&trans  &trans         &trans            &trans        &trans         &trans                                           &trans        &trans  &trans  &trans    &trans        &trans
&trans  &kp NUMBER_1   &kp NUMBER_2      &kp NUMBER_3  &kp NUMBER_4   &kp N5                                           &kp NUMBER_6  &kp N7  &kp N8  &kp N9    &kp N0        &trans
&trans  &kp LS(EXCL)   &kp SINGLE_QUOTE  &kp LBKT      &kp SEMICOLON  &kp LEFT_PARENTHESIS   &trans     &trans         &kp PLUS      &kp N4  &kp N5  &kp N6    &kp MINUS     &trans
&trans  &kp LS(QMARK)  &kp GRAVE         &kp RBKT      &kp BSLH       &kp RIGHT_PARENTHESIS  &trans     &kp LS(EQUAL)  &kp EQUAL     &kp N1  &kp N2  &kp N3    &kp SLASH     &trans
&trans  &trans         &trans            &trans        &trans         &kp LEFT_SHIFT         &kp LCTRL  &trans         &trans        &trans  &trans  &kp SEMI  &kp ASTERISK  &trans
            >;
        };

        Func_Txt {
            bindings = <
&trans  &trans  &trans   &trans   &trans   &trans                            &trans            &trans     &trans     &trans     &trans      &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0                      &bt BT_SEL 3      &kp PG_UP  &kp UP     &kp HOME   &kp ESCAPE  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1  &trans  &trans      &bt BT_SEL 4      &kp LEFT   &kp DOWN   &kp RIGHT  &kp TAB     &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &bt BT_SEL 2  &trans  &bt BT_CLR  &kp SINGLE_QUOTE  &kp PG_DN  &kp GRAVE  &kp END    &kp PIPE    &trans
&trans  &trans  &trans   &trans   &trans   &trans        &trans  &trans      &trans            &trans     &trans     &trans     &trans      &trans
            >;
        };
    };
};
